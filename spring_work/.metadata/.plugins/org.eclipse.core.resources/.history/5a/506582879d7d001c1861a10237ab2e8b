package com.spring.basic.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.spring.basic.model.UserVO;

@Controller
@RequestMapping("/response")
public class ResponseController {
	@GetMapping("/res-ex01")
	public void resEx01() {}
	
	/*
	 1. Model 객체를 사용하여 화면에 데이터 전송하기
	 
	@GetMapping("/test")
	public void test(@RequestParam("age") int age, Model model) {
		model.addAttribute("age", age);
		model.addAttribute("nick", "멍멍이");
	}
	*/
	
	//2. @ModelAttribute를 사용한 화면에 데이터 전송 처리
	//@RequestParam + model.addAttribute 처럼 동작
	@GetMapping("/test")
	public void test(@ModelAttribute("age") int age, Model model) {
//		model.addAttribute("age", age); (할 필요 x)
		model.addAttribute("nick", "멍멍이");
	}
	
	@GetMapping("/test2")
	public void test2(@ModelAttribute("info") UserVO vo) {
		System.out.println("메서드 내의 콘솔 출력: " + vo.getUserId());
	}
	
	//3. ModelAndView 객체를 활용한 처리
	@GetMapping("/test3")
	public ModelAndView test3() {
		
		ModelAndView mv = new ModelAndView();
		mv.addObject("userName", "김철수");
		mv.addObject("userAge", "30");
		mv.setViewName("response/test3");
		
		return mv;
		
		//담아낼 값이 복수일 경우 (Map을 활용하거나 커스텀 객체를 활용해서 전달 가능)
		/*
		Map<String, Object> map = new HashMap<>();
		map.put("userName", "김철수");
		map.put("userAge", 30);
		*/
		/*
		UserVO vo = new UserVO();
		vo.setUserName("김철수");
		vo.setUserAge(30);
		
		return new ModelAndView("response/test3", "user", vo);
		*/		
	}
	
	/*
	 <%--
   1. res-quiz01 파일의 화면처리를 할 수 있는 메서드부터 생성하세요.
   (맵핑url은 res-quiz01로, 메서드 이름은 맘대로)
   2. 폼 태그 작성해서 아이디와 비밀번호를 받으세요.
    action: res-login으로 맵핑, POST 전송
   3. ID:kim123, PW: 1234라면 res-quiz02페이지로 이동해서
   "로그인 성공! kim123님 환영합니다!" 를 출력.
   4. 아니라면 res-quiz03페이지로 이동해서
   "로그인 실패! '작성한 id'는 회원이 아닙니다."
   '작성한 id' 는 저렇게 똑같이 쓰라는게 아니고, 사용자가 입력한 id를 보내셔야 합니다.
    --%>
	 */
	
	@PostMapping("/res-quiz01")
	public void quiz01(@ModelAttribute("userId") String id, Model model) {
		model.addAttribute("userPw");
	}
	
}























