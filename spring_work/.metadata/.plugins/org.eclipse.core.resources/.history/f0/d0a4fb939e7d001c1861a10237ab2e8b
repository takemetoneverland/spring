package com.spring.basic.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.spring.basic.model.UserVO;

@Controller
@RequestMapping("/response")
public class ResponseController {
	@GetMapping("/res-ex01")
	public void resEx01() {}
	
	/*
	 1. Model 객체를 사용하여 화면에 데이터 전송하기
	 
	@GetMapping("/test")
	public void test(@RequestParam("age") int age, Model model) {
		model.addAttribute("age", age);
		model.addAttribute("nick", "멍멍이");
	}
	*/
	
	//2. @ModelAttribute를 사용한 화면에 데이터 전송 처리
	//@RequestParam + model.addAttribute 처럼 동작
	@GetMapping("/test")
	public void test(@ModelAttribute("age") int age, Model model) {
//		model.addAttribute("age", age); (할 필요 x)
		model.addAttribute("nick", "멍멍이");
	}
	
	@GetMapping("/test2")
	public void test2(@ModelAttribute("info") UserVO vo) {
		System.out.println("메서드 내의 콘솔 출력: " + vo.getUserId());
	}
	
	//3. ModelAndView 객체를 활용한 처리
	@GetMapping("/test3")
	public ModelAndView test3() {
		
		ModelAndView mv = new ModelAndView();
		mv.addObject("userName", "김철수");
		mv.addObject("userAge", "30");
		mv.setViewName("response/test3");
		
		return mv;
		
		//담아낼 값이 복수일 경우 (Map을 활용하거나 커스텀 객체를 활용해서 전달 가능)
		/*
		Map<String, Object> map = new HashMap<>();
		map.put("userName", "김철수");
		map.put("userAge", 30);
		*/
		/*
		UserVO vo = new UserVO();
		vo.setUserName("김철수");
		vo.setUserAge(30);
		
		return new ModelAndView("response/test3", "user", vo);
		*/		
	}

	////////////////////////////////////////////////////////////////////////////////////////////
	
	//퀴즈 화면 처리
	@GetMapping("/res-quiz01")
	public void resQuiz() {} //페이지를 보여주기 위한 용도.
	
	/*
	//커맨드 객체와 Model을 사용한 방식
	@PostMapping("/res-login")
	public String resLogin(UserVO vo, Model model) {
		
		String id = vo.getUserId();
		String pw = vo.getUserPw();
		
		model.addAttribute("userId", id);
		
		if(id.equals("kim123") && pw.equals("1234")) {
			return "response/res-quiz02";
		} else {
			return "response/res-quiz03";
		}
		
	}
	*/
	@PostMapping("/res-login")
	public String resLogin(@ModelAttribute("userId") String id) {
		
	}
	
}























