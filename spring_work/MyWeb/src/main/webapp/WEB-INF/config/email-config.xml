<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
      
      <!-- context라는 namespace가 추가 되어있어야 사용 가능하다. 안되어 있으면 bean 등록하는 방식으로 해야함 -->
      <context:property-placeholder location="classpath:/db-config/email.properties" />
      
      <!-- 이메일 인증 관련 빈 등록 -->
      <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      	  <!-- 이메일 전송할 계정의 정보를 입력해야한다. 호스트마다 port 번호 다름 -->
          <property name="host" value="smtp.gmail.com" />
          <property name="port" value="587" />
          <property name="username" value="${email.account}" /> <!-- 이메일 아이디 -->
          <property name="password" value="${email.password}" /> <!-- 이메일 비밀번호 -->
          
          <property name="javaMailProperties">
          	  <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>          
          </property>
          
      </bean>

</beans>